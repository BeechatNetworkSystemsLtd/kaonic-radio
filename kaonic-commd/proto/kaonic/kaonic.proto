
syntax = "proto3";

package kaonic;

//***************************************************************************//

message Empty {}

service EmptyService {}

//***************************************************************************//

message InfoResponse {}

message StatisticsResponse {}

service Device {
  rpc GetInfo(kaonic.Empty) returns (InfoResponse) {}
  rpc GetStatistics(kaonic.Empty) returns (StatisticsResponse) {}
}

//***************************************************************************//

enum RadioModule {
  MODULE_A = 0;
  MODULE_B = 1;
}

message RadioFrame {
  repeated uint32 data = 1;
  uint32 length = 2;
}

message RadioPhyConfigOFDM {
  uint32 mcs = 1;
  uint32 opt = 2;
}

message RadioPhyConfigQPSK {
  uint32 chip_freq = 1;
  uint32 rate_mode = 2;
}

message RadioPhyConfigFSK {
  uint32 bt = 1;
  uint32 midxs = 2;
  uint32 midx = 3;
  uint32 mord = 4;
  uint32 preamble_length = 5;
  bool freq_inversion = 6;
  uint32 srate = 7;
  uint32 pdtm = 8;
  uint32 rxo = 9;
  uint32 rxpto = 10;
  uint32 mse = 11;
  bool preamble_inversion = 12;
  uint32 fecs = 13;
  bool fecie = 14;
  uint32 sfdt = 15;
  uint32 pdt = 16;
  bool sftq = 17;
  uint32 sfd32 = 18;
  bool rawbit = 19;
  uint32 csfd1 = 20;
  uint32 csfd0 = 21;
  uint32 sfd0 = 22;
  uint32 sfd1 = 23;
  uint32 sfd = 24;
  uint32 dw = 25;
  bool pe = 26;
  bool en = 27;
  uint32 fskpe0 = 28;
  uint32 fskpe1 = 29;
  uint32 fskpe2 = 30;
}

message ConfigurationRequest {
  RadioModule module = 1;

  uint32 freq = 2;
  uint32 channel = 3;
  uint32 channel_spacing = 4;
  uint32 tx_power = 5;

  oneof phy_config {
    RadioPhyConfigOFDM ofdm = 8;
    RadioPhyConfigFSK fsk = 9;
    RadioPhyConfigQPSK qpsk = 10;
  }
}

message TransmitRequest {
  RadioModule module = 1;
  RadioFrame frame = 2;
}

message TransmitResponse { uint32 latency = 1; }

message ReceiveRequest {
  RadioModule module = 1;
  uint32 timeout = 2;
}

message ReceiveResponse {
  RadioModule module = 1;
  RadioFrame frame = 2;
  int32 rssi = 3;
  uint32 latency = 4;
}

service Radio {
  rpc Configure(ConfigurationRequest) returns (kaonic.Empty) {}
  rpc Transmit(TransmitRequest) returns (TransmitResponse) {}
  rpc ReceiveStream(ReceiveRequest) returns (stream ReceiveResponse) {}
}

//***************************************************************************//


